#include <stdio.h>
#include <math.h>
#include <time.h>
#include <ctime>
#include "WG.h"
#define W WF-50
#define H HF-50
#define PAL 600

#define WF 500
#define HF 600
void print(void);
int what(int x, int y);
void Null(int flag);
typedef struct MyStruct
{
short	int r, g, b;
}RgB;
RgB palette[PAL],nul;
  int  map[H][W];

double start,ends;

void generatePalette(void);
int is = 0;


int main()
{
	init_WinGraphic("KG", WF, HF);
	srand(time(0));
	generatePalette();
	Null(0);
	//for (size_t y = 0; y < PAL; y++)
	//	for (size_t x = 0; x < 100; x++)
	//	{
	//		if(x==0)printf("R-%d  G-%d  B-%d      %d\n", palette[y].r, palette[y].g, palette[y].b,y);
	//		if (y == 200 || y == 400)
	//			if(x==0)
	//			printf("-------------------------------\n");
	//		setpixel(x, y, RGB(palette[y].r, palette[y].g, palette[y].b));
	//	}
	
setDrawFunction(100, &print);



	runWindows();
	return 0;
}

void print(void)
{
	//start = clock();
	Null(1);
	int Height = H;
	for (int i = 0; i <4; i++)
	
		for (size_t y =0 ; y < H - 2; y++)
		{
			for (size_t x = 0; x < W; x++)
				map[y][x] = what(x, y);
		}
		for (size_t y =0 ; y < H-6; y++)
			for (size_t x = 0; x < W; x++)
			{
			setpixel(x, y, RGB(palette[map[y][x]].r, palette[map[y][x]].g, palette[map[y][x]].b));
			}
		//ends = clock();
		//printf("\n time %lf \n", (ends - start) / 1000);
}

int RR(void)
{
	int color;
	while(1)
	{
		color = rand() % PAL;
		if (color >PAL-20 )return color;
	}
}

void Null(int flag)
{
	for (size_t y = 0; y < H; y++)
		for (size_t x = 0; x < W; x++)
			if (y > H - 3&&(x>30&&x<W-50))
			{
				if (!(rand()%4==0))
					map[y][x] = RR();
				else map[y][x] = 0;
				
			}
			else if (!flag)map[y][x] = 0;
}



int what(int x, int y)
{
	
	int sum = 0;
	sum += map[y][x];
	y++;
	if(x-1>0)
		sum+= map[y][x-1];
	else sum+= 0;
	if (x+1 <W)
		sum += map[y][x +1];
	else  sum += 0;
	sum += map[y++][x];
	sum += map[y][x];

	sum= sum / 5;
	sum += (sum - PAL-(H-y))/200;
	if (sum < 60)
		sum -= (sum - PAL - (H - y));
	if (sum < 0)
		sum = 0;
	return sum;
}

void generatePalette()
{
	
	for (size_t i = 0; i < PAL; i++)
	{
		RgB buf=nul;
		if (i <= 200)
		{
			palette[i].r = i * ((double)255/200);
		}
		if (i > 200&&i<=400)
		{
			palette[i].r = 255;
			palette[i].g = ((double)160/200)*(i-200);
		}
		if (i > 400)
		{
			palette[i].r = 255;
			palette[i].g = (((double)95/200)*(i - 400))+160;
			palette[i].b = ((double)255/200)*(i - 400);
		}
	}
}